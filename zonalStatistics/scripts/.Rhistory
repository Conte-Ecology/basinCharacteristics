# Compare Missing data areas
rm(list=ls())
# ==============
# Load libraries
# ==============
library(reshape2)
library(foreign)
library(tcltk)
library(dplyr)
library(ggplot2)
#=======================
# Set the Base Directory
#=======================
baseDirectory <- 'C:/KPONEIL/GitHub/projects/basinCharacteristics/zonalStatistics'
#baseDirectory <- "G:/02-20-15 Weekend/rTables"
# ==========
# Load files
# ==========
# User inputs
# -----------
source( file.path(baseDirectory, "scripts", "INPUTS.txt") )
rasterList <- c(discreteRasters, continuousRasters)
for ( i in seq_along(rasterList)){
print(i)
upstream  <- read.csv(file.path(baseDirectory, "versions", outputName, "rTables", paste0("upstream_", rasterList[i], "_", statType, ".csv")))[,c(zoneField, "percentAreaWithData")]
names(upstream)[2] <- rasterList[i]
if( i == 1 ) { allPcnts <- upstream } else( allPcnts <- left_join(allPcnts, upstream, by = zoneField))
}
nlcd <- c("agriculture", "devel_hi", "devel_low", "devel_med", "devel_opn", "developed", "forest", "forest_decid", "forest_evgrn", "forest_mixed", "herbaceous", "water", "wetland")
undev <- "undev_forest"
fws <- c("alloffnet", "allonnet", "fwsopenwater", "fwswetlands", "openoffnet", "openonnet")
ssurgo <- "surfcoarse"
nalcc <- "elev_nalcc"
VARS <- c("agricutlure", "fwsWetlands", "surfcoarse", "elev_nalcc")
toHist <- allPcnts[,c(which(names(allPcnts) %in% VARS))]
head(toHist)
VARS <- c("agricutlure", "fwsWetlands", "surfcoarse", "elev_nalcc")
toHist <- allPcnts[,c(which(names(allPcnts) %in% VARS))]
head(tohist)
head(toHist)
names(allPcnts)
which(names(allPcnts) %in% VARS)
VARS <- c("agriculture", "fwswetlands", "surfcoarse", "elev_nalcc")
toHist <- allPcnts[,c(which(names(allPcnts) %in% VARS))]
head(toHist)
VARS <- c("agriculture", "fwswetlands", "surfcoarse", "elev_nalcc")
toHist <- allPcnts[,c(which(names(allPcnts) %in% VARS))]
toHist_melt <- melt(toHist)
rawHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram() +
facet_wrap(~variable)
trimHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram() +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 10000)) +
facet_wrap(~variable)
rawHist
trimHist
trimHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
#geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 10000)) +
facet_wrap(~variable)
trimHist
trimHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
#geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 5000)) +
facet_wrap(~variable)
trimHist
head(toHist)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(toHist,2, function(x) {length(which(x < m) == TRUE)})/nrow(toHist)*100
}else{
under <- apply(toHist,2, function(x) {length(which(x == m) == TRUE)})/nrow(toHist)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(toHist,2, function(x) {length(which(x < m) == TRUE)})/nrow(toHist)*100
}else{
under <- apply(toHist,2, function(x) {length(which(x == m) == TRUE)})/nrow(toHist)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
names(toHist) <- c('NLCD', 'FWS_Wetlands', 'SSURGO', 'NALCC_Elevation')
toHist_melt <- melt(toHist)
rawHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~variable)
trimHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 5000)) +
facet_wrap(~variable)
#x <- table(is.na(toHist))
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(toHist,2, function(x) {length(which(x < m) == TRUE)})/nrow(toHist)*100
}else{
under <- apply(toHist,2, function(x) {length(which(x == m) == TRUE)})/nrow(toHist)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(toHist,2, function(x) {length(which(x < m) == TRUE)})/nrow(toHist)*100
}else{
under <- apply(toHist,2, function(x) {length(which(x == m) == TRUE)})/nrow(toHist)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
rownames(pcnts)[m] <- paste0("Under ", comparePcnts[m])
}
m
pcnts
rownames(pcnts)
#x <- table(is.na(toHist))
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(toHist,2, function(x) {length(which(x < m) == TRUE)})/nrow(toHist)*100
}else{
under <- apply(toHist,2, function(x) {length(which(x == m) == TRUE)})/nrow(toHist)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
trimHist2 <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 1200)) +
facet_wrap(~variable)
trimHist2
trimHist
rawHist
trimHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 10000)) +
facet_wrap(~variable)
trimHist
trimHist2 <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 1000)) +
facet_wrap(~variable)
rawHist
trimHist <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 10000)) +
facet_wrap(~variable)
trimHist
trimHist2 <- ggplot(toHist_melt,aes(x=value)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 1000)) +
facet_wrap(~variable)
trimHist2
pcnts
toMin <- allPcnts[,c(1, which(names(allPcnts) %in% VARS))]
head(toMin)
group_by(toMin, FEATUREID) %>%
mutate(MIN = min())
out <- group_by(toMin, FEATUREID) %>%
mutate(MIN = min())
warnings()
names(toMin)
out <- group_by(toMin, FEATUREID) %>%
mutate(MIN = min(agriculture, fwswetlands, surfcoarse, elev_nalcc))
head(out)
trimHist2 <- ggplot(out,aes(x=MIN)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 1000))
ggplot(out,aes(x=MIN)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 1000))
allMissing <- ggplot(out,aes(x=MIN)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 10000))
allMissing
names(out) <- c('NLCD', 'FWS_Wetlands', 'SSURGO', 'NALCC_Elevation', 'All_Catchments')
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(toHist,2, function(x) {length(which(x < m) == TRUE)})/nrow(toHist)*100
}else{
under <- apply(toHist,2, function(x) {length(which(x == m) == TRUE)})/nrow(toHist)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(out,2, function(x) {length(which(x < m) == TRUE)})/nrow(out)*100
}else{
under <- apply(out,2, function(x) {length(which(x == m) == TRUE)})/nrow(out)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
head(out)
out
out <- group_by(toMin, FEATUREID) %>%
mutate(MIN = min(agriculture, fwswetlands, surfcoarse, elev_nalcc))%>%
ungroup()
allMissing <- ggplot(out,aes(x=MIN)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 10000))
allMissing
head(out)
outTable <- out[,-1]
#x <- table(is.na(toHist))
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(outTable,2, function(x) {length(which(x < m) == TRUE)})/nrow(outTable)*100
}else{
under <- apply(outTable,2, function(x) {length(which(x == m) == TRUE)})/nrow(outTable)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
names(out) <- c('FEATUREID', 'NLCD', 'FWS_Wetlands', 'SSURGO', 'NALCC_Elevation', 'All_Catchments')
outTable <- out[,-1]
head(outTable)
#x <- table(is.na(toHist))
comparePcnts <- c(100, 95, 90, 0)
pcnts <- NULL
for( m in comparePcnts){
if (m != 0){
under <- apply(outTable,2, function(x) {length(which(x < m) == TRUE)})/nrow(outTable)*100
}else{
under <- apply(outTable,2, function(x) {length(which(x == m) == TRUE)})/nrow(outTable)*100
}
if( is.null(pcnts) ){
pcnts <- under
}else ( pcnts <- rbind(pcnts, under))
}
rownames(pcnts) <- paste0(comparePcnts, "%")
pcnts
comparePcnts <- c(100, 95, 90, 50)
pcnts <- apply(outTable,2, function(x) {length(which(x == 100) == TRUE)})/nrow(outTable)*100
pcnts
for( m in comparePcnts){
under <- apply(outTable,2, function(x) {length(which(x < m) == TRUE)})/nrow(outTable)*100
rbind(pcnts, under))
}
for( m in comparePcnts){
under <- apply(outTable,2, function(x) {length(which(x < m) == TRUE)})/nrow(outTable)*100
rbind(pcnts, under)
}
pcnts <- rbind(pcnts, apply(outTable,2, function(x) {length(which(x == 0) == TRUE)})/nrow(outTable)*100)
c("100%", paste0(comparePcnts, "%"), "0%")
c("100%", paste0("Less than ", comparePcnts, "%"), "0%")
rownames(pcnts) <- c("100%", paste0("Less than ", comparePcnts, "%"), "0%")
c("100%", paste0("Less than ", comparePcnts, "%"), "0%")
dim(pcnts)
head(pcnts)
comparePcnts <- c(100, 95, 90, 50)
pcnts <- apply(outTable,2, function(x) {length(which(x == 100) == TRUE)})/nrow(outTable)*100
pcnts
comparePcnts <- c(100, 95, 90, 50)
for( m in comparePcnts){
under <- apply(outTable,2, function(x) {length(which(x < m) == TRUE)})/nrow(outTable)*100
pcnts <- rbind(pcnts, under)
}
pcnts <- rbind(pcnts, apply(outTable,2, function(x) {length(which(x == 0) == TRUE)})/nrow(outTable)*100)
rownames(pcnts) <- c("100%", paste0("Less than ", comparePcnts, "%"), "0%")
pcnts
